<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.ContactSessionMapper">
    <resultMap id="ContactSession" type="com.example.demo.enity.ContactSession">
        <id property="id" column="id"></id>
        <result property="sessionId" column="session_id"></result>
        <result property="userId" column="user_id"></result>
        <result property="isHide" column="is_hide"></result>
        <result property="nickName" column="nick_name"></result>
        <result property="unreadNum" column="unread_num"></result>
        <result property="updateTime" column="update_time"></result>
        <result property="createTime" column="create_time"></result>
        <result property="groupId" column="group_id"></result>
        <result property="contactId" column="contact_id"></result>
        <result property="isDeleted" column="is_deleted"></result>
    </resultMap>
    <resultMap id="ContactSessionVO" type="com.example.demo.VO.ContactSessionVO" extends="ContactSession">
        <result property="sendTime" column="send_time"></result>
        <result property="lastContent" column="content"></result>
        <result property="messageType" column="message_type"></result>
    </resultMap>
    <insert id="insertContactSession">
        insert into contact_session_info (user_id,session_id,nick_name,group_id,contact_id) values(#{userId},#{sessionId},#{nickName},#{groupId},#{contactId})
    </insert>
    <update id="updateUnreadNumById">
        update contact_session_info set unread_num = #{unreadNum} where id = #{id}
    </update>
    <update id="deleteByUserIdAndSessionId">
        update contact_session_info set is_deleted = 1,is_hide = 1 where user_id = #{userId} and session_id = #{sessionId}
    </update>
    <update id="updateById">
        update contact_session_info
        <trim prefix="set" suffixOverrides=",">
            <if test="isHide != null">
                is_hide = #{isHide},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted},
            </if>
            <if test="groupId != null">
                group_id = #{groupId},
            </if>
            <if test="nickName != null">
                nick_name = #{nickName},
            </if>
            <if test="unreadNum != null ">
                unread_num = #{unreadNum},
            </if>
        </trim>
        where id = #{id}
    </update>

    <select id="selectAllByUserId" resultMap="ContactSessionVO">
        select u.id,contact_id,group_id,u.session_id ,user_id,is_hide,nick_name,unread_num,update_time,send_time,create_time,content,m3.category as message_type,is_deleted,u.category

        from

            (select contact_session_info.id,session_id,user_id,is_hide,nick_name,unread_num,contact_session_info.update_time,contact_session_info.create_time,contact_id,group_id,contact_session_info.is_deleted,category
            from
            contact_session_info join session_info on session_id = session_info.id where user_id = #{userId}) as u

        left join

            (select send_time,content ,m1.session_id,category
            from
                message_info as m1
            right join
                (select max(send_time) as m_send_time,session_id
                from
                    message_info group by session_id) as m2
            on m1.session_id = m2.session_id and m1.send_time = m2.m_send_time) as m3

        on u.session_id = m3.session_id
    </select>
    <select id="selectAllBySessionId" resultMap="ContactSession">
        select * from contact_session_info where session_id = #{sessionId} and is_deleted = 0
    </select>
    <select id="selectAllChatMember" resultMap="com.example.demo.mapper.UserMapper.UserSelectVO">
        select username,account_num,photo,u.id from (select user_id from contact_session_info where session_id = #{sessionId} and is_deleted =0 ) as c join user_info as u on user_id = u.id
    </select>
    <select id="selectByUserIdAndContactId" resultMap="ContactSessionVO">
        select c.id,session_id,user_id,is_hide,nick_name,unread_num,contact_id,group_id,c.is_deleted,category from
        contact_session_info as c join session_info as s on c.session_id = s.id where #{contactId} = contact_id and #{userId} = user_id and category = #{category}
    </select>
    <select id="getById" resultMap="ContactSession">
        select * from contact_session_info where id = #{id}
    </select>
</mapper>